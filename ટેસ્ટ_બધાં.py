#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
рк╕ркВрккрлВрк░рлНркг ркЯрлЗрк╕рлНркЯ рк╕рлНркХрлНрк░рк┐рккрлНркЯ - ркЧрлБркЬрк░рк╛ркдрлА рккрк╛ркИркерки

ркЖ рк╕рлНркХрлНрк░рк┐рккрлНркЯ ркмркзрк╛ ркЯрлЗрк╕рлНркЯ ркЪрк▓рк╛рк╡рлЗ ркЫрлЗ ркЬрлЗ GitHub Actions рк╡рк░рлНркХрклрлНрк▓рлЛркорк╛ркВ ркЪрк╛рк▓рк╢рлЗ.
"""

import os
import sys
import subprocess
import platform
import locale
import unittest
from pathlib import Path

def рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко_ркорк╛рк╣рк┐ркдрлА_ркжрк░рлНрк╢рк╛рк╡рлЛ():
    """рккрлНрк▓рлЗркЯрклрлЛрк░рлНркоркирлА ркорк╛рк╣рк┐ркдрлА ркжрк░рлНрк╢рк╛рк╡рлЗ ркЫрлЗ"""
    print("ЁЯЦея╕П Platform Information:")
    print(f"  OS: {platform.system()} {platform.release()}")
    print(f"  Architecture: {platform.machine()}")
    print(f"  Python: {sys.version}")
    print(f"  Encoding: {sys.getdefaultencoding()}")
    try:
        # Use the newer method instead of deprecated getdefaultlocale()
        current_locale = locale.getlocale()
        print(f"  Locale: {current_locale}")
    except:
        print("  Locale: Unable to determine")
    print(f"  File system encoding: {sys.getfilesystemencoding()}")
    print()

    # Gujarati Unicode support test
    print("ЁЯФд Unicode Support Test:")
    gujarati_text = "ркЧрлБркЬрк░рк╛ркдрлА рккрк╛ркИркерки"
    print(f"  Gujarati text: {gujarati_text}")
    print(f"  Length: {len(gujarati_text)} characters")
    print(f"  Encoded length: {len(gujarati_text.encode('utf-8'))} bytes")
    print()

def ркХркорк╛ркВркб_ркЪрк▓рк╛рк╡рлЛ(ркХркорк╛ркВркб, рк╡рк░рлНркгрки):
    """ркХркорк╛ркВркб ркЪрк▓рк╛рк╡рлЗ ркЫрлЗ ркЕркирлЗ рккрк░рк┐ркгрк╛рко ркмркдрк╛рк╡рлЗ ркЫрлЗ"""
    print(f"{рк╡рк░рлНркгрки}")
    print(f"Running: {' '.join(ркХркорк╛ркВркб)}")
    
    try:
        result = subprocess.run(
            ркХркорк╛ркВркб,
            capture_output=True,
            text=True,
            encoding='utf-8',
            check=True
        )
        if result.stdout.strip():
            print("ркЖркЙркЯрккрлБркЯ:")
            print(result.stdout[:500])  # рккрлНрк░ркерко 500 characters
            if len(result.stdout) > 500:
                print("... (ркЖркЙркЯрккрлБркЯ ркХрк╛рккрк╡рк╛ркорк╛ркВ ркЖрк╡рлНркпрлБркВ)")
        print("рк╕рклрк│")
    except subprocess.CalledProcessError as e:
        print(f"ркирк┐рк╖рлНрклрк│: {e}")
        if e.stdout:
            print(f"STDOUT: {e.stdout}")
        if e.stderr:
            print(f"STDERR: {e.stderr}")
        return False
    except Exception as e:
        print(f"ркПрк░рк░: {e}")
        return False
    
    print()
    return True

def ркорлБркЦрлНркп():
    """ркорлБркЦрлНркп рклркВркХрлНрк╢рки"""
    print("=" * 60)
    print("ркЧрлБркЬрк░рк╛ркдрлА рккрк╛ркИркерки - рк╕ркВрккрлВрк░рлНркг ркЯрлЗрк╕рлНркЯ рк╕рлНркпрлБркЯ")
    print("=" * 60)
    print()

    # UTF-8 encoding set ркХрк░рлЛ
    if hasattr(sys.stdout, 'reconfigure'):
        sys.stdout.reconfigure(encoding='utf-8')
    if hasattr(sys.stderr, 'reconfigure'):
        sys.stderr.reconfigure(encoding='utf-8')

    # рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко ркорк╛рк╣рк┐ркдрлА
    рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко_ркорк╛рк╣рк┐ркдрлА_ркжрк░рлНрк╢рк╛рк╡рлЛ()

    # рккрлНрк░рлЛркЬрлЗркХрлНркЯ ркбрк┐рк░рлЗркХрлНркЯрк░рлА
    project_dir = Path(__file__).parent
    os.chdir(project_dir)

    # рк╕рклрк│ркдрк╛ркирлЛ рк╕рлНркХрлЛрк░
    рк╕рклрк│_ркЯрлЗрк╕рлНркЯ = 0
    ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ = 0

    # 1. ркорлВрк│ркнрлВркд ркЯрлЗрк╕рлНркЯ (Basic tests)
    print("ркорлВрк│ркнрлВркд ркЯрлЗрк╕рлНркЯ (Basic Tests)")
    print("-" * 30)
    
    ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ += 1
    if ркХркорк╛ркВркб_ркЪрк▓рк╛рк╡рлЛ([sys.executable, "-m", "unittest", "ркЯрлЗрк╕рлНркЯ.ркЯрлЗрк╕рлНркЯ_ркЕркирлБрк╡рк╛ркжркХ", "-v"], 
                    "ркЕркирлБрк╡рк╛ркжркХ ркЯрлЗрк╕рлНркЯ"):
        рк╕рклрк│_ркЯрлЗрк╕рлНркЯ += 1
    
    ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ += 1
    if ркХркорк╛ркВркб_ркЪрк▓рк╛рк╡рлЛ([sys.executable, "-m", "unittest", "ркЯрлЗрк╕рлНркЯ.рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко_ркЯрлЗрк╕рлНркЯ", "-v"],
                    "рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко ркЯрлЗрк╕рлНркЯ"):
        рк╕рклрк│_ркЯрлЗрк╕рлНркЯ += 1

    # 2. ркЙркжрк╛рк╣рк░ркг ркЯрлЗрк╕рлНркЯ (Example tests)
    print("ркЙркжрк╛рк╣рк░ркг ркЯрлЗрк╕рлНркЯ (Example Tests)")
    print("-" * 30)
    
    ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ += 1
    if ркХркорк╛ркВркб_ркЪрк▓рк╛рк╡рлЛ([sys.executable, "-m", "unittest", "ркЯрлЗрк╕рлНркЯ.ркЙркжрк╛рк╣рк░ркг_ркЯрлЗрк╕рлНркЯ", "-v"],
                    "ркЙркжрк╛рк╣рк░ркг ркЯрлЗрк╕рлНркЯ"):
        рк╕рклрк│_ркЯрлЗрк╕рлНркЯ += 1

    # 3. CLI ркИркирлНркЯрк░рклрлЗрк╕ ркЯрлЗрк╕рлНркЯ (CLI Interface tests)
    print("CLI ркИркирлНркЯрк░рклрлЗрк╕ ркЯрлЗрк╕рлНркЯ (Command Line Interface Tests)")
    print("-" * 50)
    
    cli_tests = [
        ([sys.executable, "ркорлБркЦрлНркп.py", "--help"], "рк╣рлЗрк▓рлНркк ркХркорк╛ркВркб"),
        ([sys.executable, "ркорлБркЦрлНркп.py", "--keywords"], "ркХрлАрк╡рк░рлНркб рк▓рк┐рк╕рлНркЯ"),
        ([sys.executable, "ркорлБркЦрлНркп.py", "--search", "ркЫрк╛рккрлЛ"], "ркХрлАрк╡рк░рлНркб рк╕рк░рлНркЪ"),
        ([sys.executable, "ркорлБркЦрлНркп.py", "ркЙркжрк╛рк╣рк░ркгрлЛ/рк╕рк░рк│_ркбрлЗркорлЛ.py"], "рк╕рк░рк│ ркЙркжрк╛рк╣рк░ркг"),
        ([sys.executable, "ркорлБркЦрлНркп.py", "--translate", "ркЙркжрк╛рк╣рк░ркгрлЛ/рк╕рк░рк│_ркбрлЗркорлЛ.py"], "ркЕркирлБрк╡рк╛ркж ркЯрлЗрк╕рлНркЯ")
    ]
    
    for ркХркорк╛ркВркб, рк╡рк░рлНркгрки in cli_tests:
        ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ += 1
        if ркХркорк╛ркВркб_ркЪрк▓рк╛рк╡рлЛ(ркХркорк╛ркВркб, рк╡рк░рлНркгрки):
            рк╕рклрк│_ркЯрлЗрк╕рлНркЯ += 1

    # 4. ркмркзрк╛ ркЯрлЗрк╕рлНркЯ ркПркХрк╕рк╛ркерлЗ (All tests together)
    print("ркмркзрк╛ ркЯрлЗрк╕рлНркЯ ркПркХрк╕рк╛ркерлЗ (All Tests Together)")
    print("-" * 40)
    
    ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ += 1
    if ркХркорк╛ркВркб_ркЪрк▓рк╛рк╡рлЛ([sys.executable, "-m", "unittest", 
                     "ркЯрлЗрк╕рлНркЯ.ркЯрлЗрк╕рлНркЯ_ркЕркирлБрк╡рк╛ркжркХ", "ркЯрлЗрк╕рлНркЯ.рккрлНрк▓рлЗркЯрклрлЛрк░рлНрко_ркЯрлЗрк╕рлНркЯ", "ркЯрлЗрк╕рлНркЯ.ркЙркжрк╛рк╣рк░ркг_ркЯрлЗрк╕рлНркЯ", "-v"],
                    "ркмркзрк╛ ркЯрлЗрк╕рлНркЯ ркПркХрк╕рк╛ркерлЗ"):
        рк╕рклрк│_ркЯрлЗрк╕рлНркЯ += 1

    # рккрк░рк┐ркгрк╛рко
    print("=" * 60)
    print("ркЯрлЗрк╕рлНркЯ рккрк░рк┐ркгрк╛рко (Test Results)")
    print("=" * 60)
    
    print(f"рк╕рклрк│ ркЯрлЗрк╕рлНркЯ: {рк╕рклрк│_ркЯрлЗрк╕рлНркЯ}")
    print(f"ркирк┐рк╖рлНрклрк│ ркЯрлЗрк╕рлНркЯ: {ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ - рк╕рклрк│_ркЯрлЗрк╕рлНркЯ}")
    print(f"ЁЯУК ркХрлБрк▓ ркЯрлЗрк╕рлНркЯ: {ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ}")
    print(f"ЁЯУИ рк╕рклрк│ркдрк╛ ркжрк░: {(рк╕рклрк│_ркЯрлЗрк╕рлНркЯ / ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ * 100):.1f}%")
    
    if рк╕рклрк│_ркЯрлЗрк╕рлНркЯ == ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ:
        print("\nркмркзрк╛ ркЯрлЗрк╕рлНркЯ рк╕рклрк│! ркЧрлБркЬрк░рк╛ркдрлА рккрк╛ркИркерки ркдрлИркпрк╛рк░ ркЫрлЗ!")
        return True
    else:
        print(f"\n{ркХрлБрк▓_ркЯрлЗрк╕рлНркЯ - рк╕рклрк│_ркЯрлЗрк╕рлНркЯ} ркЯрлЗрк╕рлНркЯ ркирк┐рк╖рлНрклрк│. ркХрлГрккрк╛ ркХрк░рлАркирлЗ рк╕ркорк╕рлНркпрк╛ркУ ркарлАркХ ркХрк░рлЛ.")
        return False

if __name__ == "__main__":
    рк╕рклрк│ркдрк╛ = ркорлБркЦрлНркп()
    sys.exit(0 if рк╕рклрк│ркдрк╛ else 1)